const Book = require('../model/books');
const Bookdetails = require('../model/book-details');
const Author = require('../model/author');


const createBook = async (req, res) => {
  const { title, author, genere, place } = req.body;
  try {
    const newBook = await Book.create({ title, author });
    const BookDetails = await Bookdetails.create({ title, genere });
    const AutherDetails = await Author.create({ name: author, place });
    res.status(201).json(newBook);

  } catch (error) {
    console.error('Error creating book:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
};

const getAllBooks = async (req, res) => {
  try {
    const books = await Book.findAll({
      include: [
        {
          model: Bookdetails,
          attributes: ['title', 'genere']

        },{
          model: Author,
          attributes: ['name', 'place']

        },
      ]
    });
    res.json(books);
  } catch (error) {
    console.error('Error fetching books:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
};

const updateBook = async (req, res) => {
  const bookId = req.params.id;
  const { title, author, genere, place} = req.body;
  try {
    const book = await Book.findByPk(bookId, {
      include: [
        {
          model: Bookdetails,
          attributes: ['title', 'genere']

        },{
          model: Author,
          attributes: ['name', 'place']

        }
      ]
    });
    if (!book) {
      return res.status(404).json({ message: 'Book not found' });
    }
    if (title != null) {
      book.title = title;
    }
    if (author != null) {
      book.author = author;
    }
    if (genere != null) {
      book.genere = genere;
    }
    if (place != null) {
      book.place = place;
    }
    await book.update(book, {
      where: {
      bookId: author.id
      }
      });
    console.log("book----------------------------", book.place)
    res.json(book.place);
  } catch (error) {
    console.error('Error updating book:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
};

const deleteBook = async (req, res) => {
  const bookId = req.params.id;

  try {
    const book = await Book.findByPk(bookId, {
      include: [
        {
          model: Bookdetails,
          attributes: ['title', 'genere']
        },{
          model: Author,
          attributes: ['name', 'place']

        }
      ]
    });

    if (!book) {
      return res.status(404).json({ message: 'Book not found' });
    }

    await book.destroy();
    res.json({ message: 'Book deleted successfully' });
  } catch (error) {
    console.error('Error deleting book:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
};
module.exports = { createBook, getAllBooks, updateBook, deleteBook };
